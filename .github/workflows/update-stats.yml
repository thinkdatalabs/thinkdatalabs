name: üöÄ Think Data Labs - GitHub Stats & Activity

on:
  schedule:
    - cron: '0 */6 * * *'
    - cron: '0 2 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update'
        required: false
        default: 'full'
        type: choice
        options:
          - 'full'
          - 'activity-only'
          - 'repositories-only'
      force_rebuild:
        description: 'Force rebuild all badges'
        required: false
        default: false
        type: boolean
  push:
    branches:
      - main
      - master
    paths:
      - 'README.md'
      - '.github/workflows/**'
  issues: {}

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  COMPANY_NAME: "Think Data Labs"
  GITHUB_USERNAME: "thinkdatalabs"
  BOT_NAME: "think-data-labs-bot"
  BOT_EMAIL: "dev@thinkdatalabs.com"
  TIMEZONE: "Asia/Kolkata"

jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      update_type: ${{ steps.vars.outputs.update_type }}
      force_rebuild: ${{ steps.vars.outputs.force_rebuild }}
    steps:
      - name: Set variables
        id: vars
        run: |
          echo "update_type=${{ github.event.inputs.update_type || 'full' }}" >> $GITHUB_OUTPUT
          echo "force_rebuild=${{ github.event.inputs.force_rebuild || 'false' }}" >> $GITHUB_OUTPUT

      - name: Validate tokens
        run: |
          if [ -z "${{ env.GITHUB_TOKEN }}" ]; then
            echo "‚ùå PERSONAL_ACCESS_TOKEN is not set"
            exit 1
          fi

  update-repository-table:
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.update_type == 'full' || needs.setup.outputs.update_type == 'repositories-only'
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ env.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install @octokit/rest chalk axios

      - name: Update repository status table in README
        run: |
          node <<'EOF'
          const { Octokit } = require('@octokit/rest');
          const fs = require('fs');
          const chalk = require('chalk');

          const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
          const org = 'thinkdatalabs';
          const featuredRepos = [
            'python-data-analytics',
            'ml-model-deployment',
            'react-component-library',
            'nextjs-applications'
          ];

          async function run() {
            const { data: repos } = await octokit.rest.repos.listForOrg({ org, per_page: 100 });
            let table = '| Repository | Status | Language | Stars | Forks | Issues | Last Commit |\n';
            table += '|------------|--------|----------|-------|-------|--------|-------------|\n';
            for (const repoName of featuredRepos) {
              const repo = repos.find(r => r.name === repoName);
              if (repo) {
                const language = repo.language || 'Multiple';
                const status = repo.archived ? 'Archived' : 'Active';
                const statusColor = repo.archived ? 'red' : 'brightgreen';
                const lastCommit = repo.pushed_at ? repo.pushed_at.split('T')[0] : '-';
                table += | ${repoName} | ![${status}](https://img.shields.io/badge/Status-${status}-${statusColor}) | ![${language}](https://img.shields.io/badge/${encodeURIComponent(language)}-blue?style=flat) | ![Stars](https://img.shields.io/github/stars/thinkdatalabs/${repoName}) | ![Forks](https://img.shields.io/github/forks/thinkdatalabs/${repoName}) | ![Issues](https://img.shields.io/github/issues/thinkdatalabs/${repoName}) | ${lastCommit} |\n;
              } else {
                table += | ${repoName} | ![Planned](https://img.shields.io/badge/Status-Planned-yellow) | ![TBD](https://img.shields.io/badge/Language-TBD-lightgrey) | - | - | - | - |\n;
              }
            }

            let readme = fs.readFileSync('README.md', 'utf8');
            const regex = /\| Repository \| Status \| Language[\s\S]*?(?=\n\n|\n---|\n##|\n###|$)/;
            if (regex.test(readme)) {
              readme = readme.replace(regex, table);
            } else {
              readme += \n\n${table}\n;
            }
            fs.writeFileSync('README.md', readme);
          }

          run().catch(e => { console.error(e); process.exit(1) });
          EOF

      - name: Commit changes
        run: |
          git config --global user.name "${{ env.BOT_NAME }}"
          git config --global user.email "${{ env.BOT_EMAIL }}"
          git add README.md
          git diff --cached --quiet || git commit -m "üìä Update repository status table"
          git push

  update-activity:
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.update_type == 'full' || needs.setup.outputs.update_type == 'activity-only'
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ env.GITHUB_TOKEN }}

      - name: Update recent GitHub activity
        uses: jamesgeorge007/github-activity-readme@master
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        with:
          COMMIT_MSG: 'üîÑ Update recent GitHub activity feed'
          MAX_LINES: 12
          COMMIT_NAME: ${{ env.BOT_NAME }}
          COMMIT_EMAIL: ${{ env.BOT_EMAIL }}

  update-wakatime:
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.update_type == 'full' || needs.setup.outputs.update_type == 'activity-only'
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ env.GITHUB_TOKEN }}

      - name: Update WakaTime stats
        uses: anmol098/waka-readme-stats@master
        with:
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
          GH_TOKEN: ${{ env.GITHUB_TOKEN }}
          REPOSITORY_NAME: thinkdatalabs/thinkdatalabs
          COMMIT_MESSAGE: 'üìà Updated weekly development stats'
          SHOW_PROJECTS: "False"
          SHOW_LINES_OF_CODE: "True"
          SHOW_LANGUAGE: "True"
          SHOW_OS: "True"
          SHOW_TIMEZONE: "True"
          SHOW_EDITORS: "True"
          SHOW_LANGUAGE_PER_REPO: "True"
          SHOW_SHORT_INFO: "True"
          SHOW_LOC_CHART: "False"
          LOCALE: "en"

  generate-metrics:
    runs-on: ubuntu-latest
    needs: [update-repository-table, update-activity, update-wakatime]
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ env.GITHUB_TOKEN }}

      - name: Generate GitHub Metrics
        uses: lowlighter/metrics@latest
        with:
          token: ${{ secrets.METRICS_TOKEN }}
          user: thinkdatalabs
          template: classic
          base: header, activity, community, repositories, metadata
          config_timezone: Asia/Kolkata
          plugin_isocalendar: yes
          plugin_isocalendar_duration: full-year
          plugin_languages: yes
          plugin_languages_analysis_timeout: 15
          plugin_languages_categories: markup, programming
          plugin_languages_colors: github
          plugin_languages_limit: 8
          plugin_languages_recent_categories: markup, programming
          plugin_languages_recent_days: 14
          plugin_languages_recent_load: 300
          plugin_languages_sections: most-used
          plugin_languages_threshold: 0%
          plugin_lines: yes
          plugin_repositories: yes
          plugin_repositories_batch: 100
          plugin_activity: yes
          plugin_activity_days: 14
          plugin_activity_filter: all
          plugin_activity_limit: 5
          plugin_activity_load: 300
          plugin_activity_visibility: all
          plugin_followup: yes
          plugin_followup_sections: repositories
          plugin_projects: yes
          plugin_projects_limit: 4
          plugin_code: yes
          plugin_code_lines: 12
          plugin_code_load: 400
          plugin_code_visibility: public

      - name: Commit metrics
        run: |
          git config --global user.name "${{ env.BOT_NAME }}"
          git config --global user.email "${{ env.BOT_EMAIL }}"
          git add .
          git diff --cached --quiet || git commit -m "üìà Updated GitHub metrics and insights"
          git push
